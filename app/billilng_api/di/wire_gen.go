// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/tkame123/ddd-sample/app/billilng_api/adapter/message"
	"github.com/tkame123/ddd-sample/app/billilng_api/di/provider"
	"github.com/tkame123/ddd-sample/app/billilng_api/usecase"
)

// Injectors from wire.go:

func InitializeCommandConsumer() (*message.CommandConsumer, func(), error) {
	consumerConfig := provider.NewConsumerConfig()
	envConfig, err := provider.NewENV()
	if err != nil {
		return nil, nil, err
	}
	config, err := provider.NewAWSConfig()
	if err != nil {
		return nil, nil, err
	}
	client, err := provider.NewSQSClient(config)
	if err != nil {
		return nil, nil, err
	}
	snsClient, err := provider.NewSNSClient(config)
	if err != nil {
		return nil, nil, err
	}
	publisher := message.NewEventPublisher(envConfig, snsClient)
	createBill := usecase.NewService(publisher)
	commandConsumer := message.NewCommandConsumer(consumerConfig, envConfig, client, createBill)
	return commandConsumer, func() {
	}, nil
}

// wire.go:

var providerCommandConsumerSet = wire.NewSet(message.NewCommandConsumer, message.NewEventPublisher, usecase.NewService, provider.NewENV, provider.NewAWSConfig, provider.NewConsumerConfig, provider.NewSQSClient, provider.NewSNSClient)
