// Code generated by MockGen. DO NOT EDIT.
// Source: app/order_api/domain/port/repository/create_order_saga_state.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/tkame123/ddd-sample/app/order_api/domain/model"
)

// MockCreateOrderSagaState is a mock of CreateOrderSagaState interface.
type MockCreateOrderSagaState struct {
	ctrl     *gomock.Controller
	recorder *MockCreateOrderSagaStateMockRecorder
}

// MockCreateOrderSagaStateMockRecorder is the mock recorder for MockCreateOrderSagaState.
type MockCreateOrderSagaStateMockRecorder struct {
	mock *MockCreateOrderSagaState
}

// NewMockCreateOrderSagaState creates a new mock instance.
func NewMockCreateOrderSagaState(ctrl *gomock.Controller) *MockCreateOrderSagaState {
	mock := &MockCreateOrderSagaState{ctrl: ctrl}
	mock.recorder = &MockCreateOrderSagaStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateOrderSagaState) EXPECT() *MockCreateOrderSagaStateMockRecorder {
	return m.recorder
}

// FindOne mocks base method.
func (m *MockCreateOrderSagaState) FindOne(ctx context.Context, id model.OrderID) (*model.CreateOrderSagaState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOne", ctx, id)
	ret0, _ := ret[0].(*model.CreateOrderSagaState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOne indicates an expected call of FindOne.
func (mr *MockCreateOrderSagaStateMockRecorder) FindOne(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockCreateOrderSagaState)(nil).FindOne), ctx, id)
}

// Save mocks base method.
func (m *MockCreateOrderSagaState) Save(ctx context.Context, order *model.CreateOrderSagaState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, order)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockCreateOrderSagaStateMockRecorder) Save(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockCreateOrderSagaState)(nil).Save), ctx, order)
}
